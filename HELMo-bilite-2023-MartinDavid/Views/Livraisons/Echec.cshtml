@model HELMo_bilite_2023_MartinDavid.ViewModel.EchecLivraisonViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Valider une livraison ratée";
}

<h1>@ViewData["Title"]</h1>

<h4>Livraison</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @{
            if(ViewData["Error"] != null)
            {
                <p>@ViewData["Error"]</p>
                ViewData["Error"] = null;
            }
        }
        <div>
            <p>Chauffeur en charge de la livraison: @Model.Chauffeur</p>
        </div>
        <form asp-action="Echec">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="MotifExcuse" class="control-label"></label>
                @Html.DropDownListFor(m => m.MotifExcuse, ViewBag.Motif as IEnumerable<SelectListItem>, "Sélectionnez un motif", new { @class = "form-control", @name = "motif" })
                <span asp-validation-for="MotifExcuse" class="text-danger"></span>
            </div>
            <label asp-for="Commentaire" class="control-label"></label>
            <div class="form-group">
                <textarea asp-for="Commentaire" class="form-control" rows="6" cols="50" style="resize: none"></textarea>
                <span asp-validation-for="Commentaire" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Valider la livraison" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Retour à la liste</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
